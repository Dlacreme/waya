// Flexbox display
@mixin flexbox() {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

// The 'flex' shorthand
// - applies to: flex items
// <positive-number>, initial, auto, or none
@mixin flex($values) {
  -webkit-box-flex: $values;
     -moz-box-flex: $values;
      -webkit-flex: $values;
        -ms-flex: $values;
            flex: $values;
}

// Flex Flow Direction
// - applies to: flex containers
// row | row-reverse | column | column-reverse
@mixin flex-direction($direction) {
  -webkit-flex-direction: $direction;
     -moz-flex-direction: $direction;
      -ms-flex-direction: $direction;
          flex-direction: $direction;
}

// Flex Line Wrapping
// - applies to: flex containers
// nowrap | wrap | wrap-reverse
@mixin flex-wrap($wrap) {
  -webkit-flex-wrap: $wrap;
     -moz-flex-wrap: $wrap;
      -ms-flex-wrap: $wrap;
          flex-wrap: $wrap;
}

// Flex Direction and Wrap
// - applies to: flex containers
// <flex-direction> || <flex-wrap>
@mixin flex-flow($flow) {
  -webkit-flex-flow: $flow;
     -moz-flex-flow: $flow;
      -ms-flex-flow: $flow;
          flex-flow: $flow;
}

// Display Order
// - applies to: flex items
// <integer>
@mixin order($val) {
  -webkit-box-ordinal-group: $val;
     -moz-box-ordinal-group: $val;
           -ms-flex-order: $val;
            -webkit-order: $val;
                order: $val;
}

// Flex grow factor
// - applies to: flex items
// <number>
@mixin flex-grow($grow) {
  -webkit-flex-grow: $grow;
     -moz-flex-grow: $grow;
      -ms-flex-grow: $grow;
          flex-grow: $grow;
}

// Flex shrink
// - applies to: flex item shrink factor
// <number>
@mixin flex-shrink($shrink) {
  -webkit-flex-shrink: $shrink;
     -moz-flex-shrink: $shrink;
      -ms-flex-shrink: $shrink;
          flex-shrink: $shrink;
}

// Flex basis
// - the initial main size of the flex item
// - applies to: flex itemsnitial main size of the flex item
// <width>
@mixin flex-basis($width) {
  -webkit-flex-basis: $width;
     -moz-flex-basis: $width;
      -ms-flex-basis: $width;
          flex-basis: $width;
}

// Axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | space-between | space-around
@mixin justify-content($justify) {
  -webkit-justify-content: $justify;
     -moz-justify-content: $justify;
      -ms-justify-content: $justify;
          justify-content: $justify;
            -ms-flex-pack: $justify;
}

// Packing Flex Lines
// - applies to: multi-line flex containers
// flex-start | flex-end | center | space-between | space-around | stretch
@mixin align-content($align) {
  -webkit-align-content: $align;
     -moz-align-content: $align;
      -ms-align-content: $align;
          align-content: $align;
}

// Cross-axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | baseline | stretch
@mixin align-items($align) {
  -webkit-align-items: $align;
     -moz-align-items: $align;
      -ms-align-items: $align;
          align-items: $align;
}

// Cross-axis Alignment
// - applies to: flex items
// auto | flex-start | flex-end | center | baseline | stretch
@mixin align-self($align) {
  -webkit-align-self: $align;
     -moz-align-self: $align;
      -ms-align-self: $align;
          align-self: $align;
}

/// @param $property - Property CSS
/// @param $value - Value
@mixin css3-prefix($property, $value) {
  -webkit-#{$property}: #{$value};
  -khtml-#{$property}: #{$value};
  -moz-#{$property}: #{$value};
  -ms-#{$property}: #{$value};
  -o-#{$property}: #{$value};
  #{$property}: #{$value};
}

@mixin clearfix() {
  display:block;
  clear:both;
  content:'.';
  visibility:hidden;
  height:0;
  line-height:0;
}

@mixin transition($params) {
  @include css3-prefix('transition', $params);
}

/// @param $radius - Radius pixel
/// @require css3-prefix
@mixin border-top-radius($radius) {
  @include css3-prefix('border-top-radius', $radius);
}

/// @param $radius - Radius pixel
/// @require css3-prefix
@mixin border-top-right-radius($radius) {
  @include css3-prefix('border-top-right-radius', $radius);
}

/// @param $radius - Radius pixel
/// @require css3-prefix
@mixin border-top-left-radius($radius) {
  @include css3-prefix('border-top-left-radius', $radius);
}

/// @param $radius - Radius pixel
/// @require css3-prefix
@mixin border-bottom-radius($radius) {
  @include css3-prefix('border-bottom-radius', $radius);
}

/// @param $radius - Radius pixel
/// @require css3-prefix
@mixin border-bottom-left-radius($radius) {
  @include css3-prefix('border-bottom-left-radius', $radius);
}

/// @param $radius - Radius pixel
/// @require css3-prefix
@mixin border-bottom-right-radius($radius) {
  @include css3-prefix('border-bottom-right-radius', $radius);
}

/// @param $radius - Radius pixel
/// @require css3-prefix
/// @see border-top-radius
/// @see border-top-right-radius
/// @see border-top-left-radius
/// @see border-bottom-radius
/// @see border-bottom-right-radius
/// @see border-bottom-left-radius
@mixin border-radius($radius) {
  @include css3-prefix('border-radius', $radius);
}

/// @param $params - Transition's params
/// @require css3-prefix
@mixin transition($params) {
  @include css3-prefix('transition', $params);
}

/// @param $delay - Transition's delay
/// @require css3-prefix
@mixin transition-delay($delay) {
  @include css3-prefix('transition-delay', $delay);
}

/// @param $params - Transition's params
/// @require css3-prefix
@mixin transform($params) {
  @include css3-prefix('transform', $params);
}

/// Bow-shadow mixin
/// @param {Pixel} $x [2px]
/// @param {Pixel} $y [2px]
/// @param {Pixel} $blur [5px]
/// @param {RGB} $color [rgba(0,0,0,0.4)]
/// @param {String} $inset [""]
@mixin box-shadow($x: 0px, $y: 0px, $blur: 1px, $spread: 2px, $color: #efefef) {
  @include css3-prefix('box-shadow', $x $y $blur $spread $color);
}

@mixin icon($content) {
    font-family: 'icon-font';
    font-style: normal;
    font-weight: normal;
    font-variant: normal;
    text-transform: none;
    line-height: 1;
    @media aural {
      speak: none;
    }

    /* Better Font Rendering =========== */
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;

    &:before {
        content: $content;
    }
}

@mixin img-background($url, $height: '') {
  @if ($height != '') {
    height: $height;
  }
  background-size: contain;
  background-image: url($url);
  background-repeat: no-repeat;
  background-position: center;
}
